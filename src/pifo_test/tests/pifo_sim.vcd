$date
	Sat Jun 21 19:27:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pifo_reg_wrapper $end
$var wire 1 ! insert $end
$var wire 12 " meta_in [11:0] $end
$var wire 16 # rank_in [15:0] $end
$var wire 1 $ remove $end
$var wire 1 % rst $end
$var wire 1 & valid_out $end
$var wire 16 ' rank_out [15:0] $end
$var wire 5 ( num_entries [4:0] $end
$var wire 12 ) meta_out [11:0] $end
$var wire 1 * max_valid_out $end
$var wire 16 + max_rank_out [15:0] $end
$var wire 12 , max_meta_out [11:0] $end
$var wire 1 - full $end
$var wire 1 . empty $end
$var reg 1 / clk $end
$scope module dut $end
$var wire 1 / clk $end
$var wire 4 0 idx [3:0] $end
$var wire 1 ! insert $end
$var wire 12 1 max_meta_out [11:0] $end
$var wire 16 2 max_rank_out [15:0] $end
$var wire 12 3 meta_in [11:0] $end
$var wire 12 4 meta_out [11:0] $end
$var wire 16 5 rank_in [15:0] $end
$var wire 16 6 rank_out [15:0] $end
$var wire 1 $ remove $end
$var wire 1 % rst $end
$var parameter 33 7 COMP_LVLS $end
$var parameter 32 8 L2_REG_WIDTH $end
$var parameter 32 9 META_WIDTH $end
$var parameter 32 : RANK_WIDTH $end
$var parameter 32 ; REG_WIDTH $end
$var reg 1 < calc_min_max $end
$var reg 1 . empty $end
$var reg 1 - full $end
$var reg 1 = insert_ltch $end
$var reg 1 * max_valid_out $end
$var reg 12 > meta_in_ltch [11:0] $end
$var reg 5 ? num_entries [4:0] $end
$var reg 16 @ rank_in_ltch [15:0] $end
$var reg 1 & valid_out $end
$var integer 32 A i [31:0] $end
$var integer 32 B j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 ;
b10000 :
b1100 9
b100 8
b101 7
$end
#0
$dumpvars
bx B
bx A
bx @
bx ?
bx >
x=
x<
bx 6
bz 5
bx 4
bz 3
bx 2
bx 1
bx 0
0/
x.
x-
bx ,
bx +
x*
bx )
bx (
bx '
x&
1%
z$
bz #
bz "
z!
$end
#5000
0*
0&
0-
0.
0=
0<
b0 (
b0 ?
1/
#10000
0/
#15000
0%
1/
#20000
0/
#25000
1/
#30000
0/
#35000
0$
1!
b100110001101 "
b100110001101 3
b10110011 #
b10110011 5
1/
#40000
0/
#45000
b110101111101 "
b110101111101 3
b111010 #
b111010 5
b100110001101 ,
b100110001101 1
b10110011 +
b10110011 2
b0 0
b100110001101 )
b100110001101 4
b10110011 '
b10110011 6
b101 A
b10 B
1<
b1 (
b1 ?
1/
#50000
0/
#55000
b10100101011 "
b10100101011 3
b111100 #
b111100 5
b1 0
b110101111101 )
b110101111101 4
b111010 '
b111010 6
b101 A
b10 B
b10 (
b10 ?
1<
1*
1&
1/
#60000
0/
#65000
b11101010001 "
b11101010001 3
b1000000 #
b1000000 5
b101 A
b10 B
1*
1&
b11 (
b11 ?
1<
1/
#70000
0/
#75000
b1000111110 "
b1000111110 3
b11111010 #
b11111010 5
b101 A
b10 B
b100 (
b100 ?
1<
1*
1&
1/
#80000
0/
#85000
0!
b1000111110 ,
b1000111110 1
b11111010 +
b11111010 2
b101 A
b10 B
1*
1&
b101 (
b101 ?
1<
1/
#90000
0/
#95000
0<
1/
#100000
0/
#105000
1/
#110000
0/
#115000
1/
#120000
0/
#125000
1/
#125001
