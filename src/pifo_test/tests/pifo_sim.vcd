$date
	Sat Sep 20 13:49:20 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pifo_reg_wrapper $end
$var wire 1 ! insert $end
$var wire 12 " meta_in [11:0] $end
$var wire 16 # rank_in [15:0] $end
$var wire 1 $ remove $end
$var wire 1 % rst $end
$var wire 1 & valid_out $end
$var wire 16 ' rank_out [15:0] $end
$var wire 5 ( num_entries [4:0] $end
$var wire 12 ) meta_out [11:0] $end
$var wire 1 * max_valid_out $end
$var wire 16 + max_rank_out [15:0] $end
$var wire 12 , max_meta_out [11:0] $end
$var wire 1 - full $end
$var wire 1 . empty $end
$var reg 1 / clk $end
$scope module dut $end
$var wire 1 / clk $end
$var wire 4 0 idx [3:0] $end
$var wire 1 ! insert $end
$var wire 12 1 max_meta_out [11:0] $end
$var wire 16 2 max_rank_out [15:0] $end
$var wire 12 3 meta_in [11:0] $end
$var wire 12 4 meta_out [11:0] $end
$var wire 16 5 rank_in [15:0] $end
$var wire 16 6 rank_out [15:0] $end
$var wire 1 $ remove $end
$var wire 1 % rst $end
$var parameter 33 7 COMP_LVLS $end
$var parameter 32 8 L2_REG_WIDTH $end
$var parameter 32 9 META_WIDTH $end
$var parameter 32 : RANK_WIDTH $end
$var parameter 32 ; REG_WIDTH $end
$var reg 1 < calc_min_max $end
$var reg 1 . empty $end
$var reg 1 - full $end
$var reg 1 = insert_ltch $end
$var reg 1 * max_valid_out $end
$var reg 12 > meta_in_ltch [11:0] $end
$var reg 5 ? num_entries [4:0] $end
$var reg 16 @ rank_in_ltch [15:0] $end
$var reg 1 & valid_out $end
$var integer 32 A i [31:0] $end
$var integer 32 B j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 ;
b10000 :
b1100 9
b100 8
b101 7
$end
#0
$dumpvars
bx B
bx A
bx @
bx ?
bx >
x=
x<
bx 6
b0 5
bx 4
b0 3
bx 2
bx 1
bx 0
0/
x.
x-
bx ,
bx +
x*
bx )
bx (
bx '
x&
1%
0$
b0 #
b0 "
0!
$end
#5000
0*
0&
0-
0.
0=
0<
b0 (
b0 ?
1/
#10000
0%
0/
#15000
1/
#20000
0/
#25000
1/
#30000
1!
b11101001 "
b11101001 3
b1001000000001000 #
b1001000000001000 5
0/
#35000
b11101001 ,
b11101001 1
b1001000000001000 +
b1001000000001000 2
b0 0
b11101001 )
b11101001 4
b1001000000001000 '
b1001000000001000 6
b101 A
b10 B
1<
b1 (
b1 ?
1/
#40000
0!
0/
#45000
1*
1&
0<
1/
#50000
0/
#55000
1/
#60000
1!
b10000100 "
b10000100 3
b1010011101100001 #
b1010011101100001 5
0/
#65000
b10000100 ,
b10000100 1
b1010011101100001 +
b1010011101100001 2
b101 A
b10 B
0*
0&
1<
b10 (
b10 ?
1/
#70000
0!
0/
#75000
0<
1*
1&
1/
#80000
0/
#85000
1/
#90000
1!
b1100011 "
b1100011 3
b11110101000 #
b11110101000 5
0/
#95000
b10 0
b1100011 )
b1100011 4
b11110101000 '
b11110101000 6
b101 A
b10 B
1<
b11 (
b11 ?
0*
0&
1/
#100000
0!
0/
#105000
1*
1&
0<
1/
#110000
0/
#115000
1/
#120000
1!
b100100 "
b100100 3
b1000110000101100 #
b1000110000101100 5
0/
#125000
b101 A
b10 B
0*
0&
1<
b100 (
b100 ?
1/
#130000
0!
0/
#135000
0<
1*
1&
1/
#140000
0/
#145000
1/
#150000
0/
#155000
1/
#160000
1$
0/
#165000
b100100 )
b100100 4
b1000110000101100 '
b1000110000101100 6
b10 B
0*
0&
b100100 >
b1000110000101100 @
1<
b11 (
b11 ?
b101 A
1/
#170000
0$
0/
#175000
0<
1*
1&
1/
#180000
0/
#185000
1/
#190000
0/
#195000
1/
#200000
1$
0/
#205000
b0 0
b11101001 )
b11101001 4
b1001000000001000 '
b1001000000001000 6
b10 B
0*
0&
1<
b10 (
b10 ?
b101 A
1/
#210000
0$
0/
#215000
0<
1*
1&
1/
#220000
0/
#225000
1/
#230000
0/
#235000
1/
#240000
1$
0/
#245000
b10000100 )
b10000100 4
b1010011101100001 '
b1010011101100001 6
b10 B
0*
0&
1<
b1 (
b1 ?
b101 A
1/
#250000
0$
0/
#255000
0<
1*
1&
1/
#260000
0/
#265000
1/
#270000
1!
b1111001 "
b1111001 3
b1100100111011111 #
b1100100111011111 5
0/
#275000
b1111001 ,
b1111001 1
b1100100111011111 +
b1100100111011111 2
b101 A
b10 B
1<
b10 (
b10 ?
0*
0&
1/
#280000
0!
0/
#285000
1*
1&
0<
1/
#290000
0/
#295000
1/
#300000
1!
b10010101 "
b10010101 3
b1001010010010010 #
b1001010010010010 5
0/
#305000
b10 0
b10010101 )
b10010101 4
b1001010010010010 '
b1001010010010010 6
b101 A
b10 B
0*
0&
1<
b11 (
b11 ?
1/
#310000
0!
0/
#315000
0<
1*
1&
1/
#320000
0/
#320001
